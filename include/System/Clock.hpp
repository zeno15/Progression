#ifndef INCLUDED_SYSTEM_CLOCK_HPP
#define INCLUDED_SYSTEM_CLOCK_HPP

#include <System/Time.hpp>

////////////////////////////////////////////////////////////
///
///	\namespace	System
///
////////////////////////////////////////////////////////////
namespace System {

	////////////////////////////////////////////////////////////
	///
	///	\brief	Utility class to measure time durations
	///
	////////////////////////////////////////////////////////////
	class Clock {
	public:
		////////////////////////////////////////////////////////////
		///
		///	\brief	Default constructor
		///
		///	Creates clock object with no elapsed time
		///
		////////////////////////////////////////////////////////////
		Clock(void);

		////////////////////////////////////////////////////////////
		///
		///	\brief	Gets the time elapsed of this Clock
		///
		///	\return	Time object representing elapsed time
		///
		////////////////////////////////////////////////////////////
		Time getElapsedTime(void);
		////////////////////////////////////////////////////////////
		///
		///	\brief Gets the time elapsed of this clock and restarts
		///
		///	\return	Time object representing elapsed time
		///
		////////////////////////////////////////////////////////////
		Time restart(void);

	private:
		////////////////////////////////////////////////////////////
		///
		///	\brief	Internal method used to calculate passage of time
		///
		///	\return Time object representing current time
		///
		////////////////////////////////////////////////////////////
		static Time getCurrentTime(void);

	private:
		Time m_StartTime;		///<	Initialisation time of this Clock
	};

} 

#endif // INCLUDED_SYSTEM_CLOCK_HPP